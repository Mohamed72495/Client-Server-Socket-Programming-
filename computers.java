/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package market_place;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.derby.iapi.sql.ResultSet;

/**
 *
 * @author Alaa
 */
public class computers extends javax.swing.JFrame {
    String  name;
    String id ;
    String  price ;
    String  quantity;
    int MyIndex;
    String str;
    public  itemInfo itempub;
    public ResultSet rs;
    public    Vector records;
    public   String query;
    public  ObjectInputStream br = null;
    public    Socket clientSocket = null;
    public  ObjectOutputStream out =null;
    private int mouseX,mouseY;
    public computers() {
         initComponents();
        records = new Vector();
          
                    
            try {
                 clientSocket = new Socket("localhost",1400);
                 query = "Select * from ITEMS where CATEGORY='c'";
        try {
            out = new ObjectOutputStream(clientSocket.getOutputStream());
            out.writeObject(query);
            //out.close();
        } catch (IOException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
                br = new ObjectInputStream(clientSocket.getInputStream());
                records =(Vector)br.readObject();
                br.close();
                int i =0;
                  
                  
                 
                DefaultTableModel dt = (DefaultTableModel) ItemsTable.getModel();  
                dt.setRowCount(0);
                  while(i < records.size())
                  {
                      itempub = (itemInfo)records.elementAt(i);
                      Vector v = new Vector();
                      v.add(itempub.id);
                      v.add(itempub.name);
                      v.add(itempub.price);
                      v.add(itempub.quantity);

                      dt.addRow(v);                      
                     
                      i++;                      
                  }
                  records.removeAllElements();
                 
                            
            } catch (IOException ex) {
                Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }

    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Search = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemsTable = new javax.swing.JTable();
        AddToCartBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        enteredAmount = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel4.setBackground(new java.awt.Color(0, 51, 204));

        jLabel80.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(255, 255, 255));
        jLabel80.setText("üë• ACCOUNT");
        jLabel80.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel80jLabel70MouseClicked(evt);
            }
        });

        jLabel81.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(255, 255, 255));
        jLabel81.setText("üõí CART");
        jLabel81.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel81jLabel71MouseClicked(evt);
            }
        });

        jLabel82.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(255, 255, 255));
        jLabel82.setText("üîå ITEMS");
        jLabel82.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel82jLabel71MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel80)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel80)
                .addGap(75, 75, 75)
                .addComponent(jLabel82)
                .addGap(88, 88, 88)
                .addComponent(jLabel81)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel1.setText("üîç");

        jLabel2.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 24)); // NOI18N
        jLabel2.setText("COMPUTERS");

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel3.setText("üíª");

        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        SearchBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
        });
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        ItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NAME", "PRICE", "QUANTITY"
            }
        ));
        ItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ItemsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ItemsTable);

        AddToCartBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AddToCartBtn.setText("Add To Cart");
        AddToCartBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddToCartBtnMouseClicked(evt);
            }
        });
        AddToCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToCartBtnActionPerformed(evt);
            }
        });
        AddToCartBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddToCartBtnKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel4.setText("X");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        enteredAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enteredAmountActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel5.setText("AMOUNT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(42, 42, 42)
                                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(115, 115, 115)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel2)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddToCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(enteredAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enteredAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(AddToCartBtn)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel80jLabel70MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel80jLabel70MouseClicked
        new Accounts().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel80jLabel70MouseClicked

    private void jLabel81jLabel71MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel81jLabel71MouseClicked
        new MyCart().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel81jLabel71MouseClicked

    private void jLabel82jLabel71MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel82jLabel71MouseClicked
        new Items().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel82jLabel71MouseClicked

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void AddToCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToCartBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddToCartBtnActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        this.setLocation(this.getX() + evt.getX() - mouseX,this.getY() + evt.getY() - mouseY);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void ItemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ItemsTableMouseClicked
           DefaultTableModel model=(DefaultTableModel)ItemsTable.getModel();
        MyIndex=ItemsTable.getSelectedRow();
            id = model.getValueAt(MyIndex, 0).toString();
            name = model.getValueAt(MyIndex, 1).toString();
            price = model.getValueAt(MyIndex, 2).toString();
            quantity = model.getValueAt(MyIndex, 3).toString();  
    }//GEN-LAST:event_ItemsTableMouseClicked

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
 // TODO add your handling code here:
        if(Search.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Enter an item To Search For");
             records = new Vector();
          
                    
            try {
                 clientSocket = new Socket("localhost",1400);
                 query = "Select * from ITEMS where CATEGORY='c'";
        try {
            out = new ObjectOutputStream(clientSocket.getOutputStream());
            out.writeObject(query);
            //out.close();
        } catch (IOException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
                br = new ObjectInputStream(clientSocket.getInputStream());
                records =(Vector)br.readObject();
                br.close();
                int i =0;
                  
                  
                 
                DefaultTableModel dt = (DefaultTableModel) ItemsTable.getModel();  
                dt.setRowCount(0);
                  while(i < records.size())
                  {
                      itempub = (itemInfo)records.elementAt(i);
                   Vector v = new Vector();
                      v.add(itempub.id);
                      v.add(itempub.name);
                      v.add(itempub.price);
                      v.add(itempub.quantity);

                      dt.addRow(v);                      
                     
                      i++;                      
                  }
                  records.removeAllElements();
                 
                            
            } catch (IOException ex) {
                Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    else{
          try {             
        clientSocket = new Socket("localhost",1400);
        } catch (IOException ex) {
            Logger.getLogger(EditInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
             query ="Select * from ITEMS WHERE CATEGORY ='c' and NAME ='" + Search.getText()+"'";  

        try {
          out = new ObjectOutputStream(clientSocket.getOutputStream());
          out.writeObject(query);
          br = new ObjectInputStream(clientSocket.getInputStream());
              try {
                records =(Vector)br.readObject();          
              } catch (ClassNotFoundException ex) {
                  Logger.getLogger(mobiles.class.getName()).log(Level.SEVERE, null, ex);
              }
          
             br.close();
              int i =0;
            if(!records.isEmpty()){
               /* DefaultTableModel dt = (DefaultTableModel) ItemsTable.getModel();  
                dt.setRowCount(0);
                   while(i < records.size())
                  {
                      Vector vv = new Vector();
                   itempub = (itemInfo)records.elementAt(i);     
                   str =itempub.id;
                    ItemsTable.setValueAt( str, i, 0);
                    str = itempub.name;
                    ItemsTable.setValueAt( str, i, 1);
                      str = itempub.price;
                   ItemsTable.setValueAt( str, i, 2);
                    str = itempub.quantity;
                    ItemsTable.setValueAt( str, i, 3);
                     i++;                      
                  }
           records.removeAllElements();
                */
               DefaultTableModel dt = (DefaultTableModel) ItemsTable.getModel();  
                dt.setRowCount(0);
                  while(i < records.size())
                  {
                      itempub = (itemInfo)records.elementAt(i);
                      Vector v = new Vector();
                      v.add(itempub.id);
                      v.add(itempub.name);
                      v.add(itempub.price);
                      v.add(itempub.quantity);

                      dt.addRow(v);                      
                     
                      i++;                      
                  }
                  records.removeAllElements();
            }
            else{
                JOptionPane.showMessageDialog(this, "Item does not exist");
                
            }
        // ItemsTable.setModel();
        }
        catch (IOException ex) {
            java.util.logging.Logger.getLogger(Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }         
        }  
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void AddToCartBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddToCartBtnMouseClicked
        records = new Vector();
            try {
                 clientSocket = new Socket("localhost",1400);
                 query = "Select * from ITEMS where ID="+id;
        try {
            out = new ObjectOutputStream(clientSocket.getOutputStream());
            out.writeObject(query);
            //out.close();
        } catch (IOException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
                br = new ObjectInputStream(clientSocket.getInputStream());
                records =(Vector)br.readObject();
                br.close();
                int i =0;                   
                  while(i < records.size())
                  {
                      itempub = (itemInfo)records.elementAt(i);                  
                      i++;                      
                  }
                  records.removeAllElements();                                 
            } catch (IOException ex) {
                Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }   
            if(Integer.valueOf(itempub.quantity)>=Integer.valueOf(enteredAmount.getText())){
                   query ="Insert into CART  values("+ String.valueOf(Market_Place.id )+",'" + Market_Place.userNameSaved + "','"+ name+"'," + price + "," + enteredAmount.getText() + ","+String.valueOf(Integer.valueOf(price) *Integer.valueOf(enteredAmount.getText()))+")";
                Market_Place.id++;
        try {             
           clientSocket = new Socket("localhost",1400);
           try {
            out = new ObjectOutputStream( clientSocket.getOutputStream());
            out.writeObject( query);
            out.close();
            
        } catch (IOException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
        } catch (IOException ex) {
            Logger.getLogger(EditInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        
        
             
             query = "Update ITEMS set QUANTITY = QUANTITY - "+enteredAmount.getText()+" Where NAME='" + name+"'";
             try {             
           clientSocket = new Socket("localhost",1400);
        } catch (IOException ex) {
            Logger.getLogger(EditInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
         try {
            out = new ObjectOutputStream(clientSocket.getOutputStream());
            out.writeObject(query);
            out.close();
            JOptionPane.showMessageDialog(this, "Added!");
        } catch (IOException ex) {
            Logger.getLogger(Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
            else{
                        JOptionPane.showMessageDialog(this, "Not Enough Amount");
            }
     
     
    }//GEN-LAST:event_AddToCartBtnMouseClicked

    private void enteredAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enteredAmountActionPerformed

    }//GEN-LAST:event_enteredAmountActionPerformed

    private void AddToCartBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddToCartBtnKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_AddToCartBtnKeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jPanel1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(computers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
computers a = new computers();
                a.pack();
                a.setLocationRelativeTo(null);
                a.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddToCartBtn;
    private javax.swing.JTable ItemsTable;
    private javax.swing.JTextField Search;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField enteredAmount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
